# http://travis-ci.org/#!/LaGuer/maths-with-python    
language: python            # this works for Linux but is an error on macOS or Windows
matrix:
  include:
    - name: "Python 3.7.1 on Xenial Linux"
      os: linux
      python: 3.7           # this works for Linux but is ignored on macOS or Windows
      dist: xenial          # required for Python >= 3.7
      before_install: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh ; bash miniconda.sh -b -p $HOME/miniconda -f -u ; sudo apt-get install pandoc
    - name: "Python 3.7.2 on macOS"
      os: osx
      osx_image: xcode10.2  # Python 3.7.2 running on macOS 10.14.3
      language: shell       # 'language: python' is an error on Travis CI macOS
      before_install: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh ; bash miniconda.sh -b -p $HOME/miniconda -f -u ; $HOME/miniconda/bin/conda  install -y -c anaconda pandoc #; conda 
    - name: "Python 3.7.3 on Windows"
      os: windows           # Windows 10.0.17134 N/A Build 17134
      language: shell       # 'language: python' is an error on Travis CI Windows
#      before_install: choco install python ;  choco install miniconda3 ; python -m pip install --upgrade setuptools pip #$HOME/miniconda/bin/conda  install -y -c anaconda pandoc
      env: PATH=/c/Python37:/c/Python37/Scripts:$PATH
  allow_failures:
    - os: windows
    
before_deploy:
  - rm -rf dist/
  - python run_notebooks.py

deploy:
  provider: releases
#  api_key:
#    secure: Y/=
  file: dist/*
  file_glob: true
  skip_cleanup: true
  on:
    repo: LaGuer/maths-with-python
    all_branches: true  # Backports are released from e.g. 5.x branch
    tags: true
    python: 3.6  # Any version should work, but we only need one
    condition: $TRAVIS_OS_NAME = "linux"
      
before_install:
  
  - |
    
    if [[ "$TRAVIS_OS_NAME" == "windows" ]] && [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      env | sort
      if ! which python$TRAVIS_PYTHON_VERSION; then
        choco install miniconda3 #wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
      fi
      python3 -m pip install virtualenv
      python3 -m virtualenv -p $(which python$TRAVIS_PYTHON_VERSION) ~/travis-env
      source ~/travis-env/bin/activate
    fi
  - python --version
  - ls; pwd
#  - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
#  - bash miniconda.sh -b -p $HOME/miniconda -f -u
  - ls; pwd
#  - sudo find / -name "conda" -print
#  - $HOME/miniconda/bin/conda info -a

  - |
    
    if [[ "$TRAVIS_OS_NAME" == "Ubuntu" ]] && [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      env | sort
      if ! which python$TRAVIS_PYTHON_VERSION; then
        wget https://repo.anaconda.com/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh
      fi
      python3 -m pip install virtualenv
      python3 -m virtualenv -p $(which python$TRAVIS_PYTHON_VERSION) ~/travis-env
      source ~/travis-env/bin/activate
    fi
  - python --version
#  - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - ls ; pwd
#  - bash miniconda.sh -b -p $HOME/miniconda -f -u
  - ls; pwd
#  - sudo find / -name "conda" -print
  - $HOME/miniconda/bin/conda info -a
  

  - |
    
    if [[ "$TRAVIS_OS_NAME" == "windows" ]] && [[ "$TRAVIS_PYTHON_VERSION" == "3.7" ]]; then
      env | sort
      if ! which python$TRAVIS_PYTHON_VERSION; then
        choco install miniconda3
      fi
      python3 -m pip install virtualenv
      python3 -m virtualenv -p $(which python$TRAVIS_PYTHON_VERSION) ~/travis-env
      source ~/travis-env/bin/activate
    fi
  - python --version
  - pwd
  - ls
#  - conda info -a

install: 
  - pip install --upgrade pip  # all three OSes agree about 'pip3'
  - pip install utils pytest
  - python --version
#  - bash miniconda.sh -b -p $HOME/miniconda -f -u
  - export PATH="$HOME/miniconda/bin:$PATH"
#  - hash -r

#  - start /wait "" Miniconda3-latest-Windows-x86_64.exe /InstallationType=AllUsers /RegisterPython=1 /S /D=%UserProfile%\Miniconda3
#  - conda config --set always_yes yes --set changeps1 no
  - echo $HOME/miniconda/bin 
#  - cd $HOME/miniconda/bin
  - ls $HOME/
# Useful for debugging any issues with conda
  - $HOME/miniconda/bin/conda info -a
#  - conda update -q conda

#  - conda env create -n test-environment python=$TRAVIS_PYTHON_VERSION -f environment.yml
#  - source activate test-environment
#  - conda info --envs

#  - pip install -U pip setuptools # Travis breaks without this
#  - pip install -r requirements.txt
#  - sudo find / -name "jupyter" -print
  - $HOME/miniconda/bin/conda install -y -c anaconda jupyter runipy
  - $HOME/miniconda/bin/conda install -y -c conda-forge tectonic
  - pip install -r requirements.txt
#  - pip3 install jupyter nbformat
  - jupyter nbextension enable --py widgetsnbextension
  
  
# 'python' points to Python 2.7 on macOS but points to Python 3.7 on Linux and Windows
# 'python3' is a 'command not found' error on Windows but 'py' works on Windows only
#script: python3 my_app.py || python my_app.py
script:
  - cd $HOME/build/LaGuer/maths-with-python/ && ls
#  - sudo find / -name "test_nb.py" -print
#  - build/LaGuer/Jupyter-Notebook-Practice-Physical-Constants-Ratios/test_nb.py
  - ls && pwd
  - python test_nb.py  || python test_nb.py || python test_nb.py
  - python3 test_nb.py  || python3 test_nb.py || python3 test_nb.py
script:
#  - check-manifest
  - |
    if [[ "$TRAVIS_PYTHON_VERSION" == "3.8-dev" ]]; then
       # on nightly fake parso known the grammar
       cp /home/travis/virtualenv/python3.8-dev/lib/python3.8/site-packages/parso/python/grammar37.txt /home/travis/virtualenv/python3.8-dev/lib/python3.8/site-packages/parso/python/grammar38.txt
    fi
  - cd /tmp &&  cd -
  - ls && pwd -
  # On the latest Python (on Linux) only, make sure that the docs build.
  - |
    if [[ "$TRAVIS_PYTHON_VERSION" == "3.8-dev" ]] && [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      pip install -r requirements.txt
      python conf.py
      make -C docs/ html SPHINXOPTS="-W"
    fi
#  - make #-C docs/ html SPHINXOPTS="-W"
  - ls docs/
#  - cp *.ipynb docs/
#  - jupyter nbconvert index.ipynb --to slides --reveal-prefix=docs
#  - jupyter nbconvert *.ipynb --to latex  --reveal-prefix=docs
  
after_success: |
  if [ -n "$GITLAB_API_KEY" ]; then
    git checkout --orphan gh-pages
    python conf.py
    git rm -rf --cached .
    rm ./docs/index.html
    ls ; ls docs/ ; ls latex/
    mv *.tex docs/
    tectonic docs/latex_chapter.tex --print && tectonic docs/FirstYearComputing_Master.tex --print 
    git add -f --ignore-errors images/ *.html docs/
    git -c user.name='travis' -c user.email='travis' commit -m init
    git push -f -q https://$GITLAB_USER:$GITLAB_API_KEY@gitlab.com/$TRAVIS_REPO_SLUG gh-pages
    codecov
  fi

